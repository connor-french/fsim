pop <- t(matrix(temp,ncol(suit),nrow(suit)))
pop
## Make two matrices for SLiM
## First is where each population can migraate to (pops)
## Second is the probability of migration for each place
## that is available for migration (resist)
# Initialize matrices of correct size with NAs
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
resist
pops
### Write the transformed data to files
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
write.table(resist,"~/Desktop/test_files/resist.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(pops,"~/Desktop/test_files/pops.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
plot(suit)
suit <- raster("~/Downloads/Nfpictiventris_pred_down.tif")
plot(suit)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
## Make two matrices for SLiM
## First is where each population can migraate to (pops)
## Second is the probability of migration for each place
## that is available for migration (resist)
# Initialize matrices of correct size with NAs
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
suit <- raster("~/Downloads/Nfpictiventris_pred_scaled.tif")
plot(suit)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
pop
## Make two matrices for SLiM
## First is where each population can migraate to (pops)
## Second is the probability of migration for each place
## that is available for migration (resist)
# Initialize matrices of correct size with NAs
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
### Write the transformed data to files
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
write.table(resist,"~/Desktop/test_files/resist.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(pops,"~/Desktop/test_files/pops.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
K
K[is.na(K)]<-0
K
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
K
K[is.na(K)]<-1
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
View(pops)
View(resist)
suit[is.na(suit)] <- 0.01
plot(suit)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
K
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
pop
## Make two matrices for SLiM
## First is where each population can migraate to (pops)
## Second is the probability of migration for each place
## that is available for migration (resist)
# Initialize matrices of correct size with NAs
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
### Write the transformed data to files
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
write.table(resist,"~/Desktop/test_files/resist.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(pops,"~/Desktop/test_files/pops.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
K
suit <- raster("~/Downloads/Nfpictiventris_pred_down.tif")
suit[is.na(suit)] <- 0.01
plot(suit)
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
K
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
library(vcfR)
library(adegenet)
library(ggplot2)
VCF <- read.vcfR("~/Desktop/test_files/slim_practice.vcf")
GL <- vcfR2genlight(VCF)
pca <- glPca(GL)
dat <- as.data.frame(pca$scores)
ggplot(dat, aes(x=dat[,1], y=dat[,2])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
ggplot(dat, aes(x=dat[,1], y=dat[,3])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
VCF@fix
library(vcfR)
library(adegenet)
library(ggplot2)
VCF <- read.vcfR("~/Desktop/test_files/slim_practice.vcf")
GL <- vcfR2genlight(VCF)
pca <- glPca(GL)
dat <- as.data.frame(pca$scores)
ggplot(dat, aes(x=dat[,1], y=dat[,3])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
ggplot(dat, aes(x=dat[,1], y=dat[,2])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
View(pops)
suit <- raster("~/Downloads/Nfpictiventris_pred_down.tif")
suit[is.na(suit)] <- 0.01
plot(suit)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
pop
## Make two matrices for SLiM
## First is where each population can migraate to (pops)
## Second is the probability of migration for each place
## that is available for migration (resist)
# Initialize matrices of correct size with NAs
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
### Write the transformed data to files
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
write.table(resist,"~/Desktop/test_files/resist.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(pops,"~/Desktop/test_files/pops.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
K
plot(K)
suit <- raster("~/Downloads/Nfpictiventris_pred.tif")
suit[is.na(suit)] <- 0.01
plot(suit)
### Transform suitability into carrying capacity
## Use simulated or empirical niche model for input
# Get the suitability values from the niche model as vector
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
### Transform suitability into resistance (-ish thing)
## Create matrix with population names in SLiM
# Number of cells in raster
n.cell <- nrow(suit)*ncol(suit)
# Vector of population names
temp <- c(1:n.cell)
# Spatial organization of populations
pop <- t(matrix(temp,ncol(suit),nrow(suit)))
resist <- matrix(NA,nrow(suit)*ncol(suit),5)
pops <- matrix(NA,nrow(suit)*ncol(suit),5)
n<-1
# Don't judge me for being an old lady and using for loops
for(i in 1:nrow(suit)){
for(j in 1:ncol(suit)){
# First column of our new matrices is origin population
resist[n,1] <- n
pops[n,1] <- n
# Migration from origin to the south
if(i+1 <= nrow(suit)){
resist[n,2] <- suit[i+1,j]
pops[n,2] <- pop[i+1,j]
}
# Migration from origin to the north
if(i-1 != 0){
resist[n,3] <- suit[i-1,j]
pops[n,3] <- pop[i-1,j]
}
# Migration from origin to the east
if(j+1 <= ncol(suit)){
resist[n,4] <- suit[i,j+1]
pops[n,4] <- pop[i,j+1]
}
# Migration from origin to the west
if(j-1 != 0){
resist[n,5] <- suit[i,j-1]
pops[n,5] <- pop[i,j-1]
}
n<-n+1
}
}
write.table(K,"~/Desktop/test_files/K.txt",
row.names=FALSE, col.names=FALSE)
write.table(resist,"~/Desktop/test_files/resist.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(pops,"~/Desktop/test_files/pops.txt",
row.names=FALSE, col.names=FALSE, quote=FALSE)
K
plot(K)
K[7000:8000]
K
K[8000:8500]
K[11000:12000]
plot(suit)
sum(K)
ggplot(dat, aes(x=dat[,1], y=dat[,2])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
suit <- raster("~/Downloads/Nfpictiventris_pred_scaled.tif")
suit[is.na(suit)] <- 0.01
plot(suit)
suit_val <- getValues(suit)
# Simple linear relationship between suitability
# and carry capacity
K <- round(suit_val*100)
sum(K)
suit <- raster("~/Downloads/Nfpictiventris_pred.tif")
suit[is.na(suit)] <- 0.01
plot(suit)
ggplot(dat, aes(x=dat[,1], y=dat[,2])) +
geom_point(alpha=0.5, size=4) +
xlab("PC1") + ylab("PC2") +
#scale_color_manual(name="Site", values=c("darkred","darkorange1")) +
theme_minimal() +
scale_x_continuous(breaks=seq(-20,30,10)) +
theme(axis.text = element_text(size=14),
axis.title = element_text(size=18),
panel.grid.minor = element_blank(),
legend.position = "none")
