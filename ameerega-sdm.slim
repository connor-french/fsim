// Keywords: continuous space, continuous spatial landscape, spatial map, reprising boundaries

initialize() {
	initializeSLiMOptions(dimensionality="xy");
	initializeMutationRate(1e-7);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 99999);
	initializeRecombinationRate(1e-8);
	
	// spatial competition
	initializeInteractionType(1, "xy", reciprocal=T, maxDistance=20.0);
	i1.setInteractionFunction("n", 3.0, 10.0);
	
	// spatial mate choice
	initializeInteractionType(2, "xy", reciprocal=T, maxDistance=20.0);
	i2.setInteractionFunction("n", 1.0, 5.0);
}
1 late() {
	sim.addSubpop("p1", 200);
	
	p1.setSpatialBounds(c(0.0, 0.0, 106.0, 147.0));
	
	// this file is in the recipe archive at http://benhaller.com/slim/SLiM_Recipes.zip
	mapLines = readFile("/Users/connorfrench/Dropbox/Old_Mac/School_Stuff/MastersProject/Chapter 2/SDM/output_1sp_10km_SJK_redclim_5-7-18/SDM_projections_5km_asc/ameerega_slim.asc");
	mapLines = sapply(mapLines, "strsplit(applyValue, ' ');");
	mapValues = asFloat(mapLines);
	
	p1.defineSpatialMap("ameerega", "xy", c(106, 147), mapValues, //interpolate = T,
		valueRange=c(0.0, 1.0), colors=c("white", "gray", "black"));
	
	// start near a specific map location
	for (ind in p1.individuals) {
		ind.x = rnorm(1, 50.0, 1.0);
		ind.y = rnorm(1, 75.0, 1.0);
	}
}
1: late() {
	i1.evaluate();
	i2.evaluate();
}
fitness(NULL) {
	comp = i1.totalOfNeighborStrengths(individual) / p1.individualCount;
	comp = min(c(comp, 0.99));
	return 1.0 - comp;
}
1: mateChoice() {
	return i2.strength(individual);
}
modifyChild() {
	do pos = parent1.spatialPosition + rnorm(2, 0, 2.0);
	while (!p1.pointInBounds(pos));
	
	// prevent dispersal into low-suitable habitst
	if (p1.spatialMapValue("ameerega", pos) < 0.3) //hard boundary for vis
		return F;
	
	child.setSpatialPosition(pos);
	return T;
}
5000: modifyChild() {
	do pos = parent1.spatialPosition + rnorm(2, 0, 2.0);
	while (!p1.pointInBounds(pos));
	// increase restriction
	if (p1.spatialMapValue("ameerega", pos) < 0.5) //hard boundary for vis
		return F;
	
	child.setSpatialPosition(pos);
	return T;
}

10000 late() {
	sim.outputFixedMutations();
}
